// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/client"
}

generator zod {
  provider = "prisma-zod-generator"
  output   = "../src/zod"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model Post {
  id        String   @id @default(uuid()) @db.Uuid
  title     String   @db.VarChar(256)
  content   String   @db.Text
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("post")
}

model User {
  id            String    @id
  name          String
  email         String    @unique
  emailVerified Boolean   @map("email_verified")
  image         String?
  createdAt     DateTime  @map("created_at")
  updatedAt     DateTime  @map("updated_at")
  sessions      Session[]
  accounts      Account[]

  @@map("user")
}

model Session {
  id        String   @id
  expiresAt DateTime @map("expires_at")
  token     String   @unique
  createdAt DateTime @map("created_at")
  updatedAt DateTime @map("updated_at")
  ipAddress String?  @map("ip_address")
  userAgent String?  @map("user_agent")
  userId    String   @map("user_id")
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("session")
}

model Account {
  id                     String    @id
  accountId              String    @map("account_id")
  providerId             String    @map("provider_id")
  userId                 String    @map("user_id")
  accessToken            String?   @map("access_token")
  refreshToken           String?   @map("refresh_token")
  idToken                String?   @map("id_token")
  accessTokenExpiresAt   DateTime? @map("access_token_expires_at")
  refreshTokenExpiresAt  DateTime? @map("refresh_token_expires_at")
  scope                  String?
  password               String?
  createdAt              DateTime  @map("created_at")
  updatedAt              DateTime  @map("updated_at")
  user                   User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("account")
}

model Verification {
  id         String    @id
  identifier String
  value      String
  expiresAt  DateTime  @map("expires_at")
  createdAt  DateTime? @map("created_at")
  updatedAt  DateTime? @map("updated_at")

  @@map("verification")
}
